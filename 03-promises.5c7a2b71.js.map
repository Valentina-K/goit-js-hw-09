{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SACvC,IAAIC,EAAc,GA2BlB,SAASC,EAAcC,EAAUC,GAC/BC,QAAQC,IAAIH,EAAUC,GACtB,MAAMG,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACvBL,EACFI,EAAQ,C,SAACR,E,MAAUC,IAEnBQ,EAAO,C,SAACT,E,MAAUC,GAAO,G,CAhC/BN,EAAQe,iBAAiB,SAGzB,SAAuBC,GACrBb,EAAYa,EAAIC,OAAOC,MAAQF,EAAIC,OAAOE,K,IAH5CnB,EAAQe,iBAAiB,UAMzB,SAAkBC,GAChBA,EAAII,iBAEJ,IAAIC,EAAeC,SAASnB,EAAmB,OAE/C,IAAK,IAAIoB,EAAgB,EAAGA,GAAiBpB,EAAoB,OAAGoB,GAAiB,EAEnFnB,EAAcmB,EAAeF,GAC1BG,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBR,EAAA2B,OAAOC,QAAQ,uBAAqBrB,QAAiBC,MAAU,IAEhEqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBR,EAAA2B,OAAOG,QAAQ,sBAAoBvB,QAAeC,MAAU,IAEhEe,GAAgBC,SAASnB,EAAkB,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\nlet promisePara = {};\n\nformRef.addEventListener('input', onChangeInput);\nformRef.addEventListener('submit', onSubmit);\n\nfunction onChangeInput(evt) {\n  promisePara[evt.target.name] = evt.target.value;\n}\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n \n  let promiseDelay = parseInt(promisePara[\"delay\"]);\n\n  for (let promiseNumber = 1; promiseNumber <= promisePara[\"amount\"]; promiseNumber += 1) {\n    \n    createPromise(promiseNumber, promiseDelay)\n      .then(({ position, delay }) => {       \n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);        \n      });\n    promiseDelay += parseInt(promisePara[\"step\"]);\n  }\n}\n\nfunction createPromise(position, delay) {\n  console.log(position, delay);\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({position, delay});\n    } else {\n      reject({position, delay});\n    }\n  });  \n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$promisePara","$47d4ff9957288465$var$createPromise","position","delay","console","log","shouldResolve","Math","random","Promise","resolve","reject","addEventListener","evt","target","name","value","preventDefault","promiseDelay","parseInt","promiseNumber","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.5c7a2b71.js.map"}